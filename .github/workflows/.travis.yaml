# Kodi's travis-ci.org integration file

# TODO:
# integrate with slack
# make it perfect... or not ; :P


language: cpp

# Define the build matrix
#
# Travis defaults to building on Ubuntu Precise when building on Linux. We need Trusty in order to get up
# to date versions of cmake and g++.
#
os: linux
dist: trusty
sudo: required
compiler: |
    gcc
    clang

env:
  global:
      secure: "iVfJQ2Jo7ThtHHI37NtwO1Y0rpt+ITf12BD2SfSrCLNsFdQS5TfXeEAUn7ApToye9xFXr8UhgFtTJqx5+hS7sylK5o7S4Pc4zEsqSQpTgE1e6jY5FM0dqjWzSSi79xAxol9T6Gsfqr9Pyc/JXr2SvzvPvw12FqdUlbhwPEFPfGgfckoLPt+mLrvJajxnmcuo7eIs+n/ZOEOqxri6Ok+7gvmR11e29xMg8ASX9fvJP7MDb242KkT7VtKzy4j5cvFv9/B7ihde6UM8P5ODc01urG0t9FqrZlVB2Sqh9gV15oYAQyHwAXAdItibiga4Cn858Z0vNy/zmAmRSzGhQscCAlDZhiKDtZJ1KAvCvFJKi6CqvZskbhD6Im9DO6ICtp1ochby+28T0MTFCfzPOe5+BbPe8NgyYRL0jaVhzSYae0LihW7L/Mo99soUjRtkM7uJrkcGqRszX3V0j+qO8K9NjzYxfOCbpVBpnNWRY7qx+HBKajm2SAdBGZdawZ43T1DfGPibWrFjgSDuiSCvstjm4p+9pNIi19vfci0XUIBKO95r5GhRczJktJwd7a1Ol1ODWFTCE/xJmFF3lGMh/MrbDiz2PXZnhjFlPYCPTLLTmS0uoYi7ENG+y5QA5mDSOImUDyvj4yc413jyXT3TuhE/VCWrAZvVhaG1d5EZoCfkpJM="
      secure: "ed4giID95UTDRX5Q3rFBiGCXbYDdx8nXmZgVkr8BXeQCrIe6SQHzquHDfHDJKOkpKEo7Y9/npKGN5XADuev/0mpxo79wBAAzj4zSTEzWJ9IlypBMpq2ldR/+4j5Z7DG9FoH0lB7xMCI47PWKFOJRFSixZgotXoYJTYaLM+iVuWJNo7K0XlndnG40VMTVyN4sE+swyvIvTBR+L2La08CB5MT+LmLleI58OtwMDLwA6UNRjsZA8Cji85A8YR7w6a46/xVpUhXbIiWuVxEdVLQCRaMgdTSGkEwTooVWlv8tPcyLGJWPqpL7sqCKLfGnupTENJ+NEHEJ+jmefIDAHwhS4zVQ4DGKZrIs3J6IxvVURAs1ONGzInejZ4+I077A09+wbDzHKc2mgHu4rbaKSlfzeoWrUoSV8Ko2VU75GnbT8ZZOJptAeuA7qQLCciIcYhXzQzzlalp3DCJ3QQAoksb0rngC4V5RMXV1M+e0y4FFQLD5RwUXlZFwMEPkCErWfIh0hkiKKw9X/uCq6MUXUdVYtjvZibJwiTF5y6ZNvyGqq95cnFN9oWzUuncvbVALqV5rcQeTs8XOCvb2FZhv4l3r8mTZxFnK4FaMCV+uxqu4VzPd5qXYL2piUUJxUFqTsNTHUP0zchfPHdin8siEDD8q8OTWJVS7imjN3tBK/Moh4sI="
  matrix:
    + BUILD=Kodi TOOLS=Autotools
    + BUILD=Kodi TOOLS=CMake
    + DOCS=kodi-addon-dev-kit
    + ADDONS=adsp
    + ADDONS=audiodecoder
    + ADDONS=audioencoder
    + ADDONS=pvr
    + ADDONS=screensaver
    + ADDONS=visualization

matrix:
  fast_finish: true
  allow_failures: true
    + env: ADDONS=adsp
    + env: ADDONS=audiodecoder
    + env: ADDONS=audioencoder
    + env: ADDONS=pvr
    + env: ADDONS=screensaver
    + env: ADDONS=visualization
    + env: DOCS=kodi-addon-dev-kit
  include:
    + env: DOCS=kodi-addon-dev-kit
      compiler: gcc
      compiler: clang

# Prepare system
#
# Prepare the system to install prerequisites or dependencies
#
before_install:
# Prune non-root Python from PATH. Solves https://github.com/travis-ci/travis-ci/issues/4948
# see: https://github.com/travis-ci/travis-ci/issues/5326
  - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")

# Linux
#
# Install team-xbmc/xbmc-ppa-build-depends for some dependencies and ppa:wsnipex/vaapi for libda-dev 1.6.0.
# Stupid libda-dev 1.3.0 does not work on Trusty.

  + if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
      sudo add-apt-repository -y ppa:team-xbmc/xbmc-ppa-build-depends &&
      sudo add-apt-repository -y ppa:wsnipex/vaapi &&
      sudo add-apt-repository -y ppa:george-edison55/cmake-3.x &&
      sudo apt-get update -qq;
#    fi

# Install dependencies
#
# Install any prerequisites or dependencies necessary to run our builds
#
install:
# Linux dependencies
#
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$BUILD" == "Kodi" ]]; then
        sudo apt-get install -qq automake autopoint build-essential cmake curl default-jre gawk gdb gdc
        gettext git-core gperf libasound2-dev libass-dev libbz2-dev libcap-dev libcdio-dev libcrossguid-dev libcurl3
        libcurl4-openssl-dev libdbus-1-dev libfontconfig-dev libegl1-mesa-dev libfreetype6-dev libfribidi-dev libgif-dev
        libiso9660-dev libjpeg-dev libltdl-dev liblzo2-dev libmicrohttpd-dev libmodplug-dev libmysqlclient-dev libnfs-dev
        libogg-dev libpcre3-dev libplist-dev libpng-dev libpulse-dev libsdl2-dev libsmbclient-dev libsqlite3-dev libssh-dev
        libssl-dev libtag1-dev libtinyxml-dev libtool libudev-dev libusb-dev libva-dev libvdpau-dev libvorbis-dev
        libvorbisenc2 libxml2-dev libxmu-dev libxrandr-dev libxrender-dev libxslt1-dev libxt-dev libyajl-dev mesa-utils
        nasm pmount python-dev python-imaging python-sqlite swig unzip uuid-dev yasm zip zlib1g-dev;
      elif [[ "$DOCS" == "kodi-addon-dev-kit" ]]; then
        sudo apt-get install -qq doxygen lftp;
      fi
    fi

# Prepare builds
#
before_script:

# Linux
#
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
      ulimit -c unlimited -S;
      if [[ "$TOOLS" == "Autotools" ]]; then
        cd $TRAVIS_BUILD_DIR &&
        ./bootstrap;
      elif [[ "$TOOLS" == "CMake" ]]; then
        mkdir $TRAVIS_BUILD_DIR/build &&
        cd $TRAVIS_BUILD_DIR/build;
      fi
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "g++" ]]; then
      if [[ "$TOOLS" == "Autotools" ]]; then
        ./configure --enable-debug;
      elif [[ "$TOOLS" == "CMake" ]]; then
        cmake -DCMAKE_BUILD_TYPE=Debug ../project/cmake;
      fi
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "clang++" ]]; then
      if [[ "$TOOLS" == "Autotools" ]]; then
        CXXFLAGS="-Qunused-arguments" ./configure;
      elif [[ "$TOOLS" == "CMake" ]]; then
        cmake -DCMAKE_CXX_FLAGS="-Qunused-arguments" ../project/cmake;
      fi
    fi
  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "adsp" || "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
      cd $TRAVIS_BUILD_DIR/project/cmake/addons &&
      mkdir -p build &&
      cd build/ &&
      cmake ../bootstrap -DCMAKE_BUILD_TYPE=Debug &&
      make -j3;
    fi

# Actually build
#
script:
  - if [[ "$BUILD" == "Kodi" ]]; then
      if [[ "$TOOLS" == "Autotools" ]]; then
        make -j3 &&
        make testsuite &&
        ./kodi-test;
      elif [[ "$TOOLS" == "CMake" ]]; then
        make -j3 &&
        make check;
      fi
    fi
  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "adsp" || "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
      cd $TRAVIS_BUILD_DIR/ &&
      mkdir -p build &&
      cmake -DADDONS_TO_BUILD="$ADDONS".* -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../addons $TRAVIS_BUILD_DIR/project/cmake/addons &&
      make -j3;
    fi

after_success:
  - if [[ "$BUILD" != "Kodi" ]] && [[ "$DOCS" == "kodi-addon-dev-kit" ]]; then
      if [[ $(git -C $TRAVIS_BUILD_DIR  config --get remote.origin.url | tr ':' '/' | awk -F ''.com/'|'.org/'' '{print $2}' | awk -F '/' '{print $1}') == AlwinEsch ]] &&
         [[ $TRAVIS_BRANCH == next-addonlib-rework ]]; then
        export DOC_UPLOAD_URL=esmasol.de &&
        export DOC_UPLOAD_PATH=addon-dev-kit &&
        bash $TRAVIS_BUILD_DIR/xbmc/addons/kodi-addon-dev-kit/tools/deploy-documentation.sh;
      fi
    fi

after_failure:
  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1)
  - if [[ -f "$COREFILE" ]]; then
      gdb -c "$COREFILE" kodi-test -ex "thread apply all bt" -ex "set pagination 0" -batch;
    fi

# Disable annoying emails
#
notifications:
  email: false
